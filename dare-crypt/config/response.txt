HDFS Transparent Encryption

This refers to the capacity of encrypt data at rest in a transparent way for the user, this means the user doesn't need to interact with the encrypt/decrypt process which is all made in an automated way by HDFS, this means only HDFS clients can encrypt or decrypt the data. 
Even when HDFS does all the heavy work, you still need an external "Keystore" or key management so you can separate different keys for different roles, and also you can make sure no single user can access both the data and the keys. An important thing to notice is that OS and HDFS comunicate only with encrypted HDFS data, which is good because that reduces the danger on the OS and the file system levels. This uses standard encryption algorythms such as AES-CTR128 and can suport AES-CTR256 if java Cryptography Extension unlimited strenght JCE is isntalled.
It takes advantage of Hadoop Key Management (KMS) and uses it as a proxy between HDFS clients and the Keystore. It can use local Java KeyStore but is not recommended on production environments, where more secure key management solutions should be in use, this can be acomplished with Cloudera Key Trustee Server(KTS) as a KeyStore and Key Trustee Server (KMS) and Hardware Security Modules (HSM).
HDFS Transparent Encryption has a concept called Encryption Zone (EZ) which is nothing else but a directory in HDFS. Encryption zones always must be empty to start, but one can use distcp -skipceccheck -update (both flags needed because of Encryption Zone is activated) to add data to a zone, every single file and subdirectory copied to an encryption zone will be encrypted, also, each EZ is associated with a key specified by the adminstrator at the moment of the zone creation, these keys are the ones that need to be stored in an external KeyStore mentioned before. This method generates a number of keys which I will try to explain a little, first we have an encryption zone key which is the key for the entire zone, then we have the Data Encryption Key which is used to encrypt/decrypt files and finally we have the Encrypted Data Encryption Key which is the EZKey and the Data Encryption Key encrypted, these keys are stored on the namenode as part of the files metadata in a safe way since user hdfs doesn't have access to the keys.
For production environments, cloudera recommends 2 or more redundant enterprise keyStores.



